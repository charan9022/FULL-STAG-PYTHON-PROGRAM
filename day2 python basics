{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e760e876-4213-4bb7-8b4c-c375dd7532b4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "charan\n"
     ]
    }
   ],
   "source": [
    "print (\"charan\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5c0cd6b4-78a2-4617-b891-3d4e92ec0dfe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['apple', 'mango', 'orange']\n"
     ]
    }
   ],
   "source": [
    "fruits = [\"apple\",\"banana\",\"mango\"]\n",
    "fruits.append(\"orange\")\n",
    "fruits.remove(\"banana\")\n",
    "fruits.sort()\n",
    "print(fruits) #['apple','banana','mango','orange']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5deaf8e0-da20-4a49-b329-8fef1fbcf82c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "red\n"
     ]
    }
   ],
   "source": [
    "colors = (\"red\",\"green\",\"blue\")\n",
    "print(colors[0]) #red\n",
    " #colors[1] = \"yellow\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "9f1ae120-533e-45cf-a982-125352ce913d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{1, 2, 3, 4, 5}\n"
     ]
    }
   ],
   "source": [
    "numbers = {1, 2, 3, 4}\n",
    "numbers.add(5)\n",
    "print(numbers) #{1,2,3,4,5}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a0e998d0-74e1-460a-9ab5-32ae797699de",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{1, 2, 3, 4, 5, 6, 7}\n"
     ]
    }
   ],
   "source": [
    "numbers = {1,2,3,4,5,6,}\n",
    "numbers.add(7)\n",
    "print(numbers) #{1,2,3,4,5,6,}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "f5e3860f-609a-47b3-8a32-03663e4a6f87",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "charan\n",
      "{'name': 'charan', 'age': 18, 'course': 'python full stack'}\n"
     ]
    }
   ],
   "source": [
    "student= {\n",
    "\"name\" : \"charan\",\n",
    "    \"age\" : 17,\n",
    "\"course\" : \"python full stack\"}\n",
    "print(student[\"name\"]) #vanka\n",
    "student[\"age\"]=18 #update\n",
    "print(student)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "a57cd375-4841-48c1-ad06-48ad8d47b8bf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "charan\n",
      "{'name': 'vanka charan', 'age': 19, 'course': 'python full stack'}\n"
     ]
    }
   ],
   "source": [
    "students = {\n",
    "    \"name\" : \"charan\",\n",
    "    \"age\" : 18,\n",
    "    \"course\" : \"python full stack\"}\n",
    "print(students[\"name\"]) #charan\n",
    "students[\"age\"]= 19 \n",
    "students[\"name\"] = \"vanka charan\"\n",
    "print(students)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "fac635bc-123c-4834-bd90-de2cbe9e0bef",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "dict_keys(['name', 'age', 'course', 'college'])\n",
      "dict_values(['charan', 18, 'python full stack', 'Avinash College Of Commerce'])\n"
     ]
    }
   ],
   "source": [
    "student ={\n",
    "    \"name\" : \"charan\",\n",
    "    \"age\": 18,\n",
    "    \"course\" : \"python full stack\"}\n",
    "student[\"college\"] = \"Avinash College Of Commerce\"\n",
    "print(student.keys())\n",
    "print(student.values())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "1c198e76-045d-4553-a938-05638ead93f9",
   "metadata": {},
   "outputs": [],
   "source": [
    "marks = 75\n",
    "if marks >=90:\n",
    " print(\"Grade:A\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a6af9728-2da4-43e0-be7a-3a77c8139478",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "78f5a184-fd55-4b02-a10b-fed6e602309c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Grade: Fail\n"
     ]
    }
   ],
   "source": [
    "marks = 40\n",
    "if marks >=90:\n",
    "    print(\"Grade: A\")\n",
    "elif marks >= 75:\n",
    "    print(\"Grade: B\")\n",
    "elif marks >=50:\n",
    "    print(\"Grede: C\")\n",
    "else:\n",
    "    print(\"Grade: Fail\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "7ec88b8f-cc23-443f-9d8a-7f4b5a075f29",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "number: 1\n",
      "number: 2\n",
      "number: 3\n",
      "number: 4\n",
      "number: 5\n"
     ]
    }
   ],
   "source": [
    "\n",
    "for i in range(1,6):\n",
    "    print (\"number:\",i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5281d5c5-7464-4c99-9d5a-eba8f5cba354",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
